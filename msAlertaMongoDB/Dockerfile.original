# Base image for running the app
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# Build image
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# Copy only the csproj first to leverage Docker cache
COPY ["msAlertaMongoDB.csproj", "./"]

# Restore dependencies
RUN dotnet restore "./msAlertaMongoDB.csproj"

# Copy the rest of the source code
COPY . .

# Set working directory to project folder
WORKDIR "/src"

# Build the project
RUN dotnet build "./msAlertaMongoDB.csproj" -c $BUILD_CONFIGURATION -o /app/build

# Publish the project
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./msAlertaMongoDB.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Final image
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "msAlertaMongoDB.dll"]
